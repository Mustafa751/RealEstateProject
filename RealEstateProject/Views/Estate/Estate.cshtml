@model RealEstateProject.DAL.EstateDTO

<style>
  .carousel-container {
    position: relative;
    width: 100%;
            height: 0;
            padding-bottom: 75%;
  }
  main{
   display: flex;
            flex-direction: row;
              flex-wrap: wrap;
  }

  .carousel-arrow {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    height: 30px;
    width: 30px;
    background-color: white;
    border: none;
    border-radius: 50%;
    box-shadow: 0px 0px 5px 0px rgba(0, 0, 0, 0.5);
    cursor: pointer;
  }

  .carousel-arrow:hover {
    background-color: #e6e6e6;
  }
  
  .footer[b-iita29bgur]{
  position: fixed;
  }
  
  .estate-details-container {
  display: flex;
          max-width: 2200px;
          margin-top: 250px;
          padding: 20px;
      }
  
      h2 {
       font-size: 36px;
          margin-bottom: 10px;
      }
  
      p {
       font-size: 24px;
          margin-bottom: 5px;
      }
        .estate-details-left {
               flex-basis: 40%;
           }
           .estate-details-right {
               margin-left: 200px;
               flex-basis: 70%;
               padding: 20px;
               display: flex;
               flex-direction: column;
               justify-content: space-between;
             }

          
           .carousel-arrow-left {
                   left: 0;
               }
               .carousel-arrow-right {
                   right: 0;
               }
               
                .estate-details-top p {
                   margin: 0;
                   font-size: 24px;
                 }
                 
                 .estate-details-middle {
                     display: flex;
                     flex-direction: column;
                     align-items: flex-start;
                     margin-top: 20px;
                   }
                 
                   .estate-details-middle p {
                     margin: 0;
                     font-size: 24px;
                   }
                 
               .estate-details-top {
                   display: flex;
                   flex-direction: column;
                   align-items: flex-start;
                 }
               .estate-details-bottom {
                    display: flex;
                       flex-direction: column;
                       align-items: flex-start;
                       margin-top: 20px
               }
               .estate-details-description {
                   margin-top: 20px;
                   font-size: 24px;
                   line-height: 1.5;
                 }
</style>

<div class="estate-details-container">
  <div class="estate-details-left">
    <div class="carousel-container">
      <div class="carousel-image-container">
        @foreach (var image in Model.Images)
        {
        <img src="@image.Path" class="carousel-image">
        }
      </div>
      <button class="carousel-arrow carousel-arrow-left">&#10094;</button>
      <button class="carousel-arrow carousel-arrow-right">&#10095;</button>
    </div>
  </div>
  <div class="estate-details-right">
    <div class="estate-details-top">
      <h2>@Model.Name</h2>
    </div>
    <div class="estate-details-middle">
      <p><strong>Price: </strong>@String.Format("{0:C}", Model.Price)</p>
      <p><strong>City: </strong>@Model.City</p>
      <p><strong>Address: </strong>@Model.Address</p>
    </div>
    <div class="estate-details-bottom">
      <p><strong>Estate Type:</strong> @Model.EstateType</p>
      <p><strong>Description:</strong> @Model.Description</p>
    </div>
  </div>
</div>

<script>
    // Load all images and determine the smallest width and height
    var images = document.getElementsByClassName("carousel-image");
    var smallestWidth = images[0].width;
    var smallestHeight = images[0].height;
    for (var i = 1; i < images.length; i++) {
        if (images[i].width < smallestWidth) {
            smallestWidth = images[i].width;
        }
        if (images[i].height < smallestHeight) {
            smallestHeight = images[i].height;
        }
    }

    // Set the width and height of all images to match the smallest image
    for (var i = 0; i < images.length; i++) {
        images[i].style.width = smallestWidth + "px";
        images[i].style.height = smallestHeight + "px";
    }
</script>

<script>
    var slideIndex = 1;
    showSlides(slideIndex);

    function plusSlides(n) {
        showSlides(slideIndex += n);
    }

    function currentSlide(n) {
        showSlides(slideIndex = n);
    }

    function showSlides(n) {
        var i;
        var slides = document.getElementsByClassName("carousel-image");
        if (n > slides.length) { slideIndex = 1 }
        if (n < 1) { slideIndex = slides.length }
        for (i = 0; i < slides.length; i++) {
            slides[i].style.display = "none";
        }
        slides[slideIndex - 1].style.display = "block";
    }

    document.getElementsByClassName("carousel-arrow-left")[0].addEventListener("click", function () { plusSlides(-1) });
    document.getElementsByClassName("carousel-arrow-right")[0].addEventListener("click", function () { plusSlides(1) });
</script>

<script>
    window.onload = function() {
        var imageWidth = document.querySelector('.carousel-image').naturalWidth;
        var imageHeight = document.querySelector('.carousel-image').naturalHeight;
        var imageContainer = document.querySelector('.carousel-image-container');
        var carouselContainer = document.querySelector('.carousel-container');
        imageContainer.style.width = imageWidth + 'px';
        imageContainer.style.height = imageHeight + 'px';
        carouselContainer.style.width = imageWidth + 'px';
        carouselContainer.style.height = imageHeight + 'px';
    }
</script>