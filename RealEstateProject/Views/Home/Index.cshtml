@using Microsoft.AspNetCore.Mvc.Formatters
@{
    ViewData["Title"] = "Home Page";
}

<link rel="stylesheet" href="https://code.jquery.com/ui/1.13.1/themes/base/jquery-ui.css">

<!-- Load custom jQuery UI theme from a CDN -->
<link rel="stylesheet" href="https://code.jquery.com/ui/1.13.1/themes/custom-theme.css">

<style>
.filterBtn{
  /* Other button styles */
   border-radius: 20px; /* adjust the value as needed to control the roundness of the button */
    padding: 10px 20px; /* adjust the values as needed to control the size of the button */
    color: #333333; /* use a contrasting text color that is easily readable on the background color */
    border: none; /* remove the border to make the button appear more rounded */
    cursor: pointer;
  float: right;
}
.card {
  background-color: #f0e1d2;
}

.btn-secondary {
  background-color: #333333;
  color: #ffffff;
}

  .modal {
    display: none;
    position: fixed;
    z-index: 1;
    padding-top: 100px;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: rgba(0, 0, 0, 0.4);
  }
  
  .modal-content {
  background-color: #DECC9C;
    margin: auto;
    padding: 20px;
    border: 1px solid #888;
    width: 80%;
    max-width: 600px;
  }
  
  .form-group {
    margin-bottom: 20px;
  }
  
  .close {
    color: #aaaaaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
  }
  
  .close:hover,
  .close:focus {
    color: #000;
    text-decoration: none;
    cursor: pointer;
    }
  .form-group label {
    display: block;
    font-size: 16px;
    font-weight: 600;
    margin-bottom: 10px;
  }
  
  .form-group input[type="range"] {
    width: 100%;
    margin-top: 10px;
    -webkit-appearance: none;
  }
  
  .form-group input[type="range"]:focus {
    outline: none;
  }
  
  .form-group input[type="range"]::-webkit-slider-runnable-track {
    width: 100%;
    height: 8px;
    cursor: pointer;
    background: #ddd;
    border-radius: 5px;
  }
  
  .form-group input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 15px;
    height: 15px;
    background-color: #007bff;
    cursor: pointer;
    border-radius: 50%;
  }
  
  .form-group input[type="range"]::-moz-range-thumb {
    width: 15px;
    height: 15px;
    background-color: #007bff;
    cursor: pointer;
    border-radius: 50%;
  }
  
  #moneyLabel {
    display: block;
    text-align: center;
    font-size: 14px;
    margin-top: 5px;
  }
  
  .form-group.text-right {
    text-align: right;
    margin-top: 15px;
  }
  
  .form-group.text-right button {
    margin-left: 10px;
  }
  
  .form-group.text-right .close-btn {
    margin-left: 0;
  }
  
  @@media only screen and (max-width: 768px) {
    .modal-content {
      margin-top: 20%;
    }
  }
  .body-page{
  padding-top: 25px;;
  }
  .sort-dropdown{
   background-color: burlywood; /* set the background color of the select element */
    color: #333333; /* set the text color to create contrast with the background color */
    border: none; /* remove the default border */
    padding: 10px; /* adjust the padding as needed to control the size of the select element */
    border-radius: 20px; /* adjust the border-radius as needed to control the roundness of the select element */
    appearance: none; /* remove the default arrow that appears in some browsers */
    -webkit-appearance: none; /* remove the default arrow for Safari */
    -moz-appearance: none; /
  }
  
.modal {
  display: none; /* Hidden by default */
  position: fixed; /* Stay in place */
  z-index: 1; /* Sit on top */
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto; /* Enable scroll if needed */
  background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
}

/* Modal content */
.modal-content {
  background-color: #DECC9C;
  margin: 10% auto; /* 10% from the top and centered */
  padding: 20px;
  border: 1px solid #888;
  width: 80%; /* Could be more or less, depending on screen size */
}

/* Modal form */
.modal-content form {
  display: flex;
  flex-direction: column;
  align-items: center;
}

/* Modal heading */
.modal-content h2 {
  text-align: center;
  margin-bottom: 20px;
}

/* Modal form group */
.modal-content .form-group {
  margin-bottom: 20px;
  width: 100%;
}

/* Modal label */
.modal-content label {
  display: block;
  margin-bottom: 5px;
}

/* Modal select */
.modal-content select {
  width: 100%;
  padding: 10px;
  border-radius: 5px;
  border: 1px solid #ccc;
  background-color: #fff;
}

/* Modal price range input */
.modal-content input[type="range"] {
  width: 100%;
}

/* Modal price label */
.modal-content #moneyLabel {
  display: block;
  text-align: center;
  margin-top: 5px;
}

/* Modal buttons */
.modal-content .text-right {
  display: flex;
  justify-content: flex-end;
  align-items: center;
}

.modal-content .btn {
  margin-left: 10px;
}

/* Close button */
.close-btn {
  background-color: #ccc;
  border: none;
  color: #333;
  padding: 10px 20px;
  border-radius: 5px;
  cursor: pointer;
}

.close-btn:hover {
  background-color: #333;
  color: #fff;
}

</style>
<div class="body-page">
    <button class="filterBtn" id="filterBtn" style="background-color: burlywood">Filter</button>
    @* <button id="addEstateBtn">Add Estate</button> *@ 
    <label for="sort-dropdown">Sort by:</label>
    <select class="sort-dropdown" id="sort-dropdown">
        <option value="">Please choose an option ▼</option>
        <option value="price-asc">Възходяща цена</option>
        <option value="price-desc">Низходяща цена</option>
    </select>

    <div id="realEstateModal" class="modal">
    <div class="modal-content">
        <h2>Real Estate Filters</h2>
        <form>
            <div class="form-group">
                <label for="location">Location:</label>
                <select class="form-control" id="location" style="background-color: papayawhip;">
                    <option value="">Any</option>
                    <option value="Sofia">Sofia</option>
                                    <option value="Varna">Varna</option>
                                    <option value="Plovdiv">Plovdiv</option>
                                    <option value="Ruse">Ruse</option>
                                    <option value="Burgas">Burgas</option>
                </select>
            </div>
          <div class="form-group">
            <label for="money">Price Range:</label>
            <div id="money-range"></div>
            <span id="moneyLabel">$0-$500,000</span>
          </div>
            <div class="form-group">
                <label for="type">Type:</label>
                <select class="form-control" id="type" style="background-color: papayawhip;">
                     <option value="Apartment">Apartment</option>
                                    <option value="House">House</option>
                                    <option value="Land">Land</option>
                </select>
            </div>
            <div class="form-group text-right">
                <button type="submit" class="btn btn-primary">Filter</button>
                <button type="button" class="btn btn-secondary close-btn">Close</button>
            </div>
        </form>
    </div>
</div>

<!-- Modal -->
<div id="addEstateModal" class="modal">
    <!-- Modal content -->
    <div class="modal-content">
        <span class="close">&times;</span>
        <form enctype="multipart/form-data">
            <label for="city">City:</label>
            <select id="city" name="city">
                <option value="Sofia">Sofia</option>
                <option value="Varna">Varna</option>
                <option value="Plovdiv">Plovdiv</option>
                <option value="Ruse">Ruse</option>
                <option value="Burgas">Burgas</option>
            </select><br><br>
            <label for="city">EstateType:</label>
            <select id="estate" name="estate">
                <option value="Apartment">Apartment</option>
                <option value="House">House</option>
                <option value="Land">Land</option>
            </select><br><br>
            <label for="name">Name:</label>
            <input type="text" id="name" name="name"><br><br>
            <label for="address">Address:</label>
            <input type="text" id="address" name="address"><br><br>
            <label for="price">Price:</label>
            <input type="text" id="price" name="price"><br><br>
            <label for="description">Description:</label>
            <textarea id="description" name="description" rows="4" cols="50"></textarea><br><br>
            <label for="image1">Image 1:</label>
            <input type="file" id="image1" name="image1"><br><br>
            <label for="image2">Collection of Images:</label>
            <input type="file" id="image2" name="image2" multiple><br><br>
            <input type="submit" id="submitAddFormButton" value="Submit">
        </form>
    </div>
</div>

<div class="row">
    <div class="col-md-4">
        <!-- Card 1 -->
    </div>
    <div class="col-md-4">
        <!-- Card 2 -->
    </div>
    <div class="col-md-4">
        <!-- Card 3 -->
    </div>
    <div class="clearfix"></div>
</div>

<div id="estates-container" style="background-color: #faf0e6" class="row row-cols-1 row-cols-md-2 g-1"></div>
</div>

@section Scripts{
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script>
  $(document).ready(function() {
    
   $('#sort-dropdown').on('change', function() {
     var selectedValue = $(this).val();
     if (selectedValue === 'price-asc') {
       var cards = $('#estates-container .card');
       cards.sort(function(a, b) {
         var aPrice = parseInt($(a).find('p.card-text:contains("Price:")').text().replace('Price:', '').trim());
         var bPrice = parseInt($(b).find('p.card-text:contains("Price:")').text().replace('Price:', '').trim());
         return aPrice - bPrice;
       });
       $("#estates-container").html(cards);
     } else if (selectedValue === 'price-desc') {
       var cards = $('#estates-container .card');
       cards.sort(function(a, b) {
         var aPrice = parseInt($(a).find('p.card-text:contains("Price:")').text().replace('Price:', '').trim());
         var bPrice = parseInt($(b).find('p.card-text:contains("Price:")').text().replace('Price:', '').trim());
         return bPrice - aPrice;
       });
       $("#estates-container").html(cards);
     }
   });

   // Create a new XMLHttpRequest object
   let xhr = new XMLHttpRequest();
   
   // Define the request URL
   let url = "https://localhost:7295/api/Estate";
   
   // Open a new GET request with the specified URL
   xhr.open("GET", url);
   
   // Set the response type to JSON
   xhr.responseType = "text";
   
   // Define a callback function to handle the response
   xhr.onload = function() {
     if (xhr.status === 200) {
       // Success! Handle the response data
       let estates = JSON.parse(xhr.response);
      for (let estate of estates) {
            
             // Create a new card element
             let card = $("<div>").addClass("card d-inline-block m-5").css("width", "33rem");
             
             // Create a new image element and set its source
             let image = $("<img>").addClass("card-img-top w-50 float-start p-4").attr("src", estate.images[0].path);
             
             // Create a new card body element
             let body = $("<div>").addClass("card-body d-flex flex-column");
             
             // Create a new heading element for the estate name
             let heading = $("<h5>").addClass("card-title").text(estate.address);
             
             // Create a new paragraph element for the estate type
             let type = $("<p>").addClass("card-text").text("Estate Type: " + estate.estateType);
             
             // Create a new paragraph element for the estate price
             let price = $("<p>").addClass("card-text").text("Price: " + estate.price);
             
             // Create a new button element
             let button = $("<a>").addClass("btn btn-secondary").attr("href", "https://localhost:7295/api/Estate/" + estate.id).text("View");
             
             // Create a new container element for the button
             let buttonContainer = $("<div>").addClass("d-flex justify-content-end mt-4");
             
             // Append the button to the button container
             buttonContainer.append(button);
             
             // Append the heading, type, price, and button container to the card body
             body.append(heading, type, price, buttonContainer);
             
             // Append the image and card body to the card
             card.append(image, body);
       
       // Add the card to the page
       $("#estates-container").append(card);
      
      }
     } else {
       // Oops! Something went wrong
       console.log("Error:", xhr.status);
     }
   };
   
   // Send the request
   xhr.send();

  });
  </script>
  <!-- Load jQuery library from a CDN -->
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

  <!-- Load jQuery UI library from a CDN -->
  <script src="https://code.jquery.com/ui/1.13.1/jquery-ui.min.js"></script>

  <script>
     var selectedValues = [0, 500000];
     
     $(function() {
       // Initialize the slider widget
       var slider = $("#money-range").slider({
         range: true,
         min: 0,
         max: 500000,
         step: 1000,
         values: [0, 500000],
         slide: function(event, ui) {
           $("#moneyLabel").html("$" + ui.values[0] + "-$" + ui.values[1]);
           // Update the global variable with the selected values
           selectedValues = ui.values;
         }
       });
       // Set initial label text
       $("#moneyLabel").html("$" + slider.slider("values", 0) + "-$" + slider.slider("values", 1));
     
       // Get selected values from the slider and update the global variable
       selectedValues = slider.slider("values");
     });


    // Get the modal
    let filterModal = document.getElementById("realEstateModal");

    // Get the button that opens the modal
    let filterBtn = document.getElementById("filterBtn");

    // Get the <span> element that closes the modal
        let filterSpan = document.getElementsByClassName("close-btn")[0];

        // When the user clicks the button, open the modal
        filterBtn.onclick = function() {
        filterModal.style.display = "block";
        }

        // When the user clicks on <span> (x), close the modal
        filterSpan.onclick = function() {
        filterModal.style.display = "none";
        }

        // When the user clicks anywhere outside of the modal, close it
        window.onclick = function(event) {
        if (event.target === filterModal) {
        filterModal.style.display = "none";
        }
        }

        // When the user submits the form in the modal
        let form = document.querySelector('form');
        form.addEventListener('submit', function(event) {
        event.preventDefault(); // prevent default form submission
        let location = document.getElementById("location").value;
        let type = document.getElementById("type").value;
        
        var formData = new FormData();
           formData.append("city", location);
           formData.append("type", type);
           formData.append("minPrice", selectedValues[0]);
           formData.append("maxPrice", selectedValues[1]);
          
         
           // Make AJAX request
           var xhr = new XMLHttpRequest();
           xhr.open("POST", "https://localhost:7295/api/Estate/filter");
           xhr.onload = function() {
             if (xhr.status === 200) {
              var div = document.getElementById("estates-container");
                div.innerHTML = "";
              let estates = JSON.parse(xhr.response);
                    for (let estate of estates) {
                          
                           // Create a new card element
                           let card = $("<div>").addClass("card d-inline-block m-5").css("width", "33rem");
                           
                           // Create a new image element and set its source
                           let image = $("<img>").addClass("card-img-top w-50 float-start p-4").attr("src", estate.images[0].path);
                           
                           // Create a new card body element
                           let body = $("<div>").addClass("card-body d-flex flex-column");
                           
                           // Create a new heading element for the estate name
                           let heading = $("<h5>").addClass("card-title").text(estate.address);
                           
                           // Create a new paragraph element for the estate type
                           let type = $("<p>").addClass("card-text").text("Estate Type: " + estate.estateType);
                           
                           // Create a new paragraph element for the estate price
                           let price = $("<p>").addClass("card-text").text("Price: " + estate.price);
                           
                           // Create a new button element
                           let button = $("<a>").addClass("btn btn-secondary").attr("href", "https://localhost:7295/api/Estate/" + estate.id).text("View");
                           
                           // Create a new container element for the button
                           let buttonContainer = $("<div>").addClass("d-flex justify-content-end mt-4");
                           
                           // Append the button to the button container
                           buttonContainer.append(button);
                           
                           // Append the heading, type, price, and button container to the card body
                           body.append(heading, type, price, buttonContainer);
                           
                           // Append the image and card body to the card
                           card.append(image, body);
                     
                     // Add the card to the page
                     $("#estates-container").append(card);
                     }
                    let filterModal = document.getElementById("realEstateModal");
                     filterModal.style.display = "none";
             } else {
               // Handle error
               console.log("Error adding estate");
             }
           };
           xhr.send(formData);
        
        // Apply the selected filters and display the appropriate real estate listings on the page
        // For example, you could use an AJAX request to retrieve the filtered listings from the server and update the page with the results
        });
        
        
        function emptyDiv(divId) {
          var div = document.getElementById(divId);
          div.innerHTML = "";
        }
    </script>
}